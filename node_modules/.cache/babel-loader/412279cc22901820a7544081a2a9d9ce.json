{"ast":null,"code":"var _jsxFileName = \"/home/marcusalves/Documentos/primeiroAPP/dtmoney/src/hooks/useTansactions.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionContext = /*#__PURE__*/createContext({});\nexport function TransactionsProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [transactions, setTransactions] = useState([]);\n\n  async function createTransaction(transactionInput) {\n    const response = await api.post('/transactions', { ...transactionInput,\n      createdAt: new Date()\n    });\n    const {\n      transaction\n    } = response.data;\n    setTransactions([...transactions, transaction]);\n  }\n\n  useEffect(() => {\n    api.get('/transactions').then(response => setTransactions(response.data.transactions));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TransactionContext.Provider, {\n    value: {\n      transactions,\n      createTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 13\n  }, this);\n}\n\n_s(TransactionsProvider, \"tub2M/CzLcs9FSEKIuD+u/CaA5w=\");\n\n_c = TransactionsProvider;\nexport function useTrasactions() {}\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"sources":["/home/marcusalves/Documentos/primeiroAPP/dtmoney/src/hooks/useTansactions.tsx"],"names":["createContext","useEffect","useState","api","TransactionContext","TransactionsProvider","children","transactions","setTransactions","createTransaction","transactionInput","response","post","createdAt","Date","transaction","data","get","then","useTrasactions"],"mappings":";;;AAAA,SAAQA,aAAR,EAAkCC,SAAlC,EAA6CC,QAA7C,QAA4D,OAA5D;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAsBA,OAAO,MAAMC,kBAAkB,gBAAEJ,aAAa,CAAyB,EAAzB,CAAvC;AAGP,OAAO,SAASK,oBAAT,OAAoE;AAAA;;AAAA,MAArC;AAACC,IAAAA;AAAD,GAAqC;AAEvE,QAAK,CAACC,YAAD,EAAcC,eAAd,IAAiCN,QAAQ,CAAgB,EAAhB,CAA9C;;AAGI,iBAAeO,iBAAf,CAAiCC,gBAAjC,EAAmE;AAEjE,UAAMC,QAAQ,GAAK,MAAMR,GAAG,CAACS,IAAJ,CAAS,eAAT,EAAyB,EAAC,GAAGF,gBAAJ;AAAqBG,MAAAA,SAAS,EAAC,IAAIC,IAAJ;AAA/B,KAAzB,CAAzB;AACA,UAAM;AAACC,MAAAA;AAAD,QAAiBJ,QAAQ,CAACK,IAAhC;AACAR,IAAAA,eAAe,CACX,CAAC,GAAGD,YAAJ,EACEQ,WADF,CADW,CAAf;AAID;;AAEDd,EAAAA,SAAS,CAAC,MAAI;AACXE,IAAAA,GAAG,CAACc,GAAJ,CAAQ,eAAR,EACCC,IADD,CACMP,QAAQ,IAAGH,eAAe,CAACG,QAAQ,CAACK,IAAT,CAAcT,YAAf,CADhC;AAEF,GAHQ,EAGP,EAHO,CAAT;AAKA,sBACI,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAACA,MAAAA,YAAD;AAAcE,MAAAA;AAAd,KAApC;AAAA,cACKH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMP;;GA1BeD,oB;;KAAAA,oB;AA2BhB,OAAO,SAASc,cAAT,GAAyB,CAAE","sourcesContent":["import {createContext, ReactNode, useEffect, useState} from 'react';\nimport { api } from '../services/api';\n\ninterface Transaction {\n    id:number,\n    title:string,\n    amount:number,\n    type:string,\n    category:string,\n    createdAt:string\n}\n\ntype TransactionInput = Omit<Transaction,'id'|'createdAt'> \n\ninterface TransactionContextData{\n    transactions:Transaction[],\n    createTransaction:(transaction:TransactionInput)=>Promise<void>\n}\n\ninterface TransactionsProviderProps{\n    children:ReactNode\n}\n\nexport const TransactionContext= createContext<TransactionContextData>({} as TransactionContextData);\n\n\nexport function TransactionsProvider( {children}:TransactionsProviderProps){\n\n    const[transactions,setTransactions] = useState<Transaction[]>([]);\n\n\n        async function createTransaction(transactionInput:TransactionInput){\n\n          const response =   await api.post('/transactions',{...transactionInput,createdAt:new Date()});\n          const {transaction} =  response.data;  \n          setTransactions(\n              [...transactions,\n                transaction\n              ]);\n        }\n\n        useEffect(()=>{\n           api.get('/transactions')\n           .then(response=> setTransactions(response.data.transactions));\n        },[]);\n\n        return(\n            <TransactionContext.Provider value={{transactions,createTransaction}}>\n                {children}\n            </TransactionContext.Provider>\n        );\n    \n}\nexport function useTrasactions(){}"]},"metadata":{},"sourceType":"module"}