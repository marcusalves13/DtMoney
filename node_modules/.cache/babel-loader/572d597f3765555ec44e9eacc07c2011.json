{"ast":null,"code":"var _jsxFileName = \"/home/marcusalves/Documentos/dtmoney2.0/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Modal from 'react-modal';\nimport { Dashboard } from \"./components/Dashboard/Index\";\nimport { Header } from \"./components/Header/Index\";\nimport { NewTransactionModal } from \"./components/NewTransactionModal\";\nimport { GlobalStyle } from \"./styles/global\";\nimport { TransactionsProvider } from \"./hooks/useTansactions\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nexport function App() {\n  _s();\n\n  const [isNewTransactionModalOpen, setIsNewTransactionModalOpen] = useState(false);\n\n  function handleOpenNewTransactionModal() {\n    setIsNewTransactionModalOpen(true);\n  }\n\n  function handleCloseNewTransactionModal() {\n    setIsNewTransactionModalOpen(false);\n  }\n\n  const onCreatedTransaction = () => toast.success('ðŸ¦„ Wow so easy!', {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined\n  });\n\n  return /*#__PURE__*/_jsxDEV(TransactionsProvider, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onOpenNewTransactionModal: handleOpenNewTransactionModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTransactionModal, {\n      isOpen: isNewTransactionModalOpen,\n      onRequestClose: handleCloseNewTransactionModal,\n      onCreatedTransaction: onCreatedTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vldLJF5BtD0iPnhyHMjUTWunxQQ=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/marcusalves/Documentos/dtmoney2.0/src/App.tsx"],"names":["useState","Modal","Dashboard","Header","NewTransactionModal","GlobalStyle","TransactionsProvider","ToastContainer","toast","setAppElement","App","isNewTransactionModalOpen","setIsNewTransactionModalOpen","handleOpenNewTransactionModal","handleCloseNewTransactionModal","onCreatedTransaction","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACA,SAASC,mBAAT,QAAoC,kCAApC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACE,OAAO,uCAAP;;AACFP,KAAK,CAACQ,aAAN,CAAoB,OAApB;AACA,OAAO,SAASC,GAAT,GAAe;AAAA;;AAEpB,QAAM,CAACC,yBAAD,EAA2BC,4BAA3B,IAA2DZ,QAAQ,CAAC,KAAD,CAAzE;;AAIA,WAASa,6BAAT,GAAwC;AACpCD,IAAAA,4BAA4B,CAAC,IAAD,CAA5B;AACH;;AAED,WAASE,8BAAT,GAAyC;AACrCF,IAAAA,4BAA4B,CAAC,KAAD,CAA5B;AACH;;AAED,QAAMG,oBAAoB,GAAG,MAAMP,KAAK,CAACQ,OAAN,CAAc,iBAAd,EAAiC;AAClEC,IAAAA,QAAQ,EAAE,WADwD;AAElEC,IAAAA,SAAS,EAAE,IAFuD;AAGlEC,IAAAA,eAAe,EAAE,KAHiD;AAIlEC,IAAAA,YAAY,EAAE,IAJoD;AAKlEC,IAAAA,YAAY,EAAE,IALoD;AAMlEC,IAAAA,SAAS,EAAE,IANuD;AAOlEC,IAAAA,QAAQ,EAAEC;AAPwD,GAAjC,CAAnC;;AAUA,sBACE,QAAC,oBAAD;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,yBAAyB,EAAIX;AAArC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,mBAAD;AAAqB,MAAA,MAAM,EAAEF,yBAA7B;AAAwD,MAAA,cAAc,EAAEG,8BAAxE;AAAwG,MAAA,oBAAoB,EAAEC;AAA9H;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,cAAD;AACA,MAAA,QAAQ,EAAC,WADT;AAEA,MAAA,SAAS,EAAE,IAFX;AAGA,MAAA,eAAe,EAAE,KAHjB;AAIA,MAAA,WAAW,EAAE,KAJb;AAKA,MAAA,YAAY,MALZ;AAMA,MAAA,GAAG,EAAE,KANL;AAOA,MAAA,gBAAgB,MAPhB;AAQA,MAAA,SAAS,MART;AASA,MAAA,YAAY;AATZ;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA1CeL,G;;KAAAA,G","sourcesContent":["import { useState } from \"react\";\nimport Modal from 'react-modal';\nimport { Dashboard } from \"./components/Dashboard/Index\";\nimport { Header } from \"./components/Header/Index\";\nimport { NewTransactionModal } from \"./components/NewTransactionModal\";\nimport { GlobalStyle } from \"./styles/global\";\nimport { TransactionsProvider } from \"./hooks/useTansactions\";\nimport { ToastContainer, toast } from 'react-toastify';\n  import 'react-toastify/dist/ReactToastify.css';\nModal.setAppElement('#root');\nexport function App() {\n\n  const [isNewTransactionModalOpen,setIsNewTransactionModalOpen] = useState(false);\n\n\n\n  function handleOpenNewTransactionModal(){\n      setIsNewTransactionModalOpen(true)\n  }\n\n  function handleCloseNewTransactionModal(){\n      setIsNewTransactionModalOpen(false)\n  }\n\n  const onCreatedTransaction = () => toast.success('ðŸ¦„ Wow so easy!', {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    });\n \n  return (\n    <TransactionsProvider>\n      <Header onOpenNewTransactionModal = {handleOpenNewTransactionModal}/>\n      <Dashboard/>\n      <NewTransactionModal isOpen={isNewTransactionModalOpen} onRequestClose={handleCloseNewTransactionModal} onCreatedTransaction={onCreatedTransaction}/>\n      <GlobalStyle />\n      <ToastContainer \n      position=\"top-right\"\n      autoClose={5000}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n      pauseOnFocusLoss\n      draggable\n      pauseOnHover/>\n    </TransactionsProvider>\n  );\n}"]},"metadata":{},"sourceType":"module"}