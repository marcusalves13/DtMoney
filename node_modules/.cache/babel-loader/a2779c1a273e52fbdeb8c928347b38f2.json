{"ast":null,"code":"var _jsxFileName = \"/home/marcusalves/Documentos/primeiroAPP/dtmoney/src/TransactionsContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport { api } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTransactionsProvider;\nexport const TransactionContext = /*#__PURE__*/createContext([]);\nexport function TransactionsProvider() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get('/transactions').then(response => setTransactions(response.data.transactions));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TransactionContext.Provider, {\n    value: transactions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, this);\n}\n\n_s(TransactionsProvider, \"tub2M/CzLcs9FSEKIuD+u/CaA5w=\");\n\n_c = TransactionsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"sources":["/home/marcusalves/Documentos/primeiroAPP/dtmoney/src/TransactionsContext.tsx"],"names":["createContext","useEffect","useState","api","TransactionsProvider","TransactionContext","transactions","setTransactions","get","then","response","data"],"mappings":";;;AAAA,SAAQA,aAAR,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,SAASC,GAAT,QAAoB,gBAApB;;AAWAC,oBAAoB;AACpB,OAAO,MAAMC,kBAAkB,gBAAEL,aAAa,CAAgB,EAAhB,CAAvC;AAGP,OAAO,SAASI,oBAAT,GAA+B;AAAA;;AAElC,QAAK,CAACE,YAAD,EAAcC,eAAd,IAAiCL,QAAQ,CAAgB,EAAhB,CAA9C;AAEID,EAAAA,SAAS,CAAC,MAAI;AACXE,IAAAA,GAAG,CAACK,GAAJ,CAAQ,eAAR,EACCC,IADD,CACMC,QAAQ,IAAGH,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcL,YAAf,CADhC;AAEF,GAHQ,EAGP,EAHO,CAAT;AAKA,sBACI,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEA;AAApC;AAAA;AAAA;AAAA;AAAA,UADJ;AAKP;;GAdeF,oB;;KAAAA,oB","sourcesContent":["import {createContext, useEffect, useState} from 'react';\nimport { api } from './services/api';\n\ninterface Transaction {\n    id:number,\n    title:string,\n    amount:number,\n    type:string,\n    category:string,\n    createdAt:string\n}\n\nTransactionsProvider\nexport const TransactionContext= createContext<Transaction[]>([]);\n\n\nexport function TransactionsProvider(){\n\n    const[transactions,setTransactions] = useState<Transaction[]>([]);\n\n        useEffect(()=>{\n           api.get('/transactions')\n           .then(response=> setTransactions(response.data.transactions))\n        },[]);\n\n        return(\n            <TransactionContext.Provider value={transactions}>\n            </TransactionContext.Provider>\n        );\n    \n}"]},"metadata":{},"sourceType":"module"}